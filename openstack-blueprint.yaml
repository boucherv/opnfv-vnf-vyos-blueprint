tosca_definitions_version: cloudify_dsl_1_2

description: >
  This blueprint is deploy target_vnf reference_vnf management_
  network and dataplane_network.

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.3/plugin.yaml

inputs:
  keystone_username:
    type: string

  keystone_password:
    type: string

  keystone_tenant_name:
    type: string

  keystone_url:
    type: string

  region:
    type: string

  external_network_name:
    type: string

  router_name:
    type: string
    default: cfy_local_router

  network_name:
    type: string
    default: cfy_local_network

  subnet_name:
    type: string
    default: cfy_local_subnet

  data_plane_network_name:
    type: string
    default: cfy_local_data_plane_network

  data_plane_subnet_name:
    type: string
    default: cfy_local_data_plane_subnet

  target_vnf_port_name:
    type: string
    default: cfy_local_target_vnf_port

  reference_vnf_port_name:
    type: string
    default: cfy_local_reference_vnf_port

  target_vnf_data_plane_port_name:
    type: string
    default: cfy_local_target_vnf_data_plane_port

  reference_vnf_data_plane_port_name:
    type: string
    default: cfy_local_reference_vnf_data_plane_port

  security_group_name:
    type: string
    default: cfy_local_security_group

  keypair_name:
    type: string
    default: cfy_local_keypair

  ssh_key_filename:
    type: string
    default: ~/.ssh/cfy_local_keypair.pem

  target_vnf_name:
    type: string
    default: cfy_target_vnf

  target_vnf_image_id:
    type: string

  target_vnf_flavor_id:
    type: string

  reference_vnf_name:
    type: string
    default: cfy_reference_vnf

  reference_vnf_image_id:
    type: string

  reference_vnf_flavor_id:
    type: string

dsl_definitions:
  openstack_configuration: &openstack_configuration
    username: { get_input: keystone_username }
    password: { get_input: keystone_password }
    tenant_name: { get_input: keystone_tenant_name }
    auth_url: { get_input: keystone_url }
    region: { get_input: region }

node_templates:

  target_vnf_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      floatingip:
        floating_network_name: { get_input: external_network_name }
      openstack_config: *openstack_configuration

  reference_vnf_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      floatingip:
        floating_network_name: { get_input: external_network_name }
      openstack_config: *openstack_configuration

  target_vnf_host:
    type: cloudify.openstack.nodes.Server
    properties:
      openstack_config: *openstack_configuration
      resource_id: { get_input: target_vnf_name }
      install_agent: false
      server:
        image: { get_input: target_vnf_image_id }
        flavor: { get_input: target_vnf_flavor_id }
      management_network_name: { get_property: [network, resource_id] }
    relationships:
      - target: keypair
        type: cloudify.openstack.server_connected_to_keypair
      - target: target_vnf_port
        type: cloudify.openstack.server_connected_to_port
      - target: target_vnf_data_plane_port
        type: cloudify.openstack.server_connected_to_port

  reference_vnf_host:
    type: cloudify.openstack.nodes.Server
    properties:
      openstack_config: *openstack_configuration
      resource_id: { get_input: reference_vnf_name }
      install_agent: false
      server:
        image: { get_input: reference_vnf_image_id }
        flavor: { get_input: reference_vnf_flavor_id }
      management_network_name: { get_property: [network, resource_id] }
    relationships:
      - target: keypair
        type: cloudify.openstack.server_connected_to_keypair
      - target: reference_vnf_port
        type: cloudify.openstack.server_connected_to_port
      - target: reference_vnf_data_plane_port
        type: cloudify.openstack.server_connected_to_port

  keypair:
    type: cloudify.openstack.nodes.KeyPair
    properties:
      resource_id: { get_input: keypair_name }
      private_key_path: { get_input: ssh_key_filename }
      openstack_config: *openstack_configuration

  target_vnf_port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *openstack_configuration
      resource_id: { get_input: target_vnf_port_name }
    relationships:
      - type: cloudify.relationships.contained_in
        target: network
      - type: cloudify.relationships.depends_on
        target: subnet
      - type: cloudify.openstack.port_connected_to_security_group
        target: security_group
      - target: target_vnf_ip
        type: cloudify.openstack.port_connected_to_floating_ip

  reference_vnf_port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *openstack_configuration
      resource_id: { get_input: reference_vnf_port_name }
    relationships:
      - type: cloudify.relationships.contained_in
        target: network
      - type: cloudify.relationships.depends_on
        target: subnet
      - type: cloudify.openstack.port_connected_to_security_group
        target: security_group
      - target: reference_vnf_ip
        type: cloudify.openstack.port_connected_to_floating_ip

  target_vnf_data_plane_port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *openstack_configuration
      resource_id: { get_input: target_vnf_data_plane_port_name }
    relationships:
      - type: cloudify.relationships.contained_in
        target: data_plane_network
      - type: cloudify.relationships.depends_on
        target: data_plane_subnet
      - type: cloudify.openstack.port_connected_to_security_group
        target: security_group

  reference_vnf_data_plane_port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *openstack_configuration
      resource_id: { get_input: reference_vnf_data_plane_port_name }
    relationships:
      - type: cloudify.relationships.contained_in
        target: data_plane_network
      - type: cloudify.relationships.depends_on
        target: data_plane_subnet
      - type: cloudify.openstack.port_connected_to_security_group
        target: security_group

  security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      openstack_config: *openstack_configuration
      resource_id: { get_input: security_group_name }
      security_group:
        description: Security group for vnf test
      rules:
        - port: 22
          remote_ip_prefix: { get_property: [subnet, subnet, cidr] }

  subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: { get_input: subnet_name }
      subnet:
        ip_version: 4
        cidr: 10.67.79.0/24
      openstack_config: *openstack_configuration
    relationships:
      - target: network
        type: cloudify.relationships.contained_in
      - target: router
        type: cloudify.openstack.subnet_connected_to_router

  network:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { get_input: network_name }
      openstack_config: *openstack_configuration

  data_plane_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: { get_input: data_plane_subnet_name }
      subnet:
        ip_version: 4
        cidr: 192.168.220.0/24
      openstack_config: *openstack_configuration
    relationships:
      - target: data_plane_network
        type: cloudify.relationships.contained_in

  data_plane_network:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { get_input: data_plane_network_name }
      openstack_config: *openstack_configuration

  router:
    type: cloudify.openstack.nodes.Router
    properties:
      resource_id: { get_input: router_name }
      openstack_config: *openstack_configuration
    relationships:
      - target: external_network
        type: cloudify.relationships.connected_to

  external_network:
    type: cloudify.openstack.nodes.Network
    properties:
      use_external_resource: true
      resource_id: { get_input: external_network_name }
      openstack_config: *openstack_configuration

outputs:

  target_vnf:
    description: Target VNF Connection Settings
    value:
      target_vnf_host_ip: { get_attribute: [ target_vnf_ip, floating_ip_address ] }
      target_vnf_host_public_key_path: { get_property: [ keypair, private_key_path ] }

  reference_vnf:
    description: Reference VNF Connection Settings
    value:
      reference_vnf_host_ip: { get_attribute: [ reference_vnf_ip, floating_ip_address ] }
      reference_vnf_host_public_key_path: { get_property: [ keypair, private_key_path ] }
